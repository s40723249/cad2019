<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<p></p>
<h1>WEEK</h1>
<h2>WEEK2~WEEK5</h2>
<p>week2</p>
<p>建立自己倉儲</p>
<p>將2019fall可攜式套件載入自己隨身碟裡</p>
<p>git  clone倉儲網址</p>
<p> git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add  git commit  git push 將內容推到遠端.</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/XEN5YQWK4S8" width="560"></iframe></p>
<p></p>
<p>week3</p>
<p>Solvespace 編譯<span>流程</span></p>
<p><span>將Solvespace載至自己隨身碟中</span></p>
<p><span>先將 Y:\portablegit\bin\sh.exe 改名為 sh_rename_for_solvespace.exe</span></p>
<p><span>輸入git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace取得子模組資料</span></p>
<p><span>進入到Y:\tmp\solvespace\extlib\angle\CMakeLists.txt並將713714行前面加上#</span></p>
<p><span>把 libpng.dll.a 改名為libpng_static.a並放到編譯系統的 lib 目錄中</span></p>
<p>接著到solvespace裡面的<span>extlib再到libpng裡面建立一資料夾build</span></p>
<p>cd build裡面打入<span>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release</span></p>
<p><span>好了後再輸入mingw32-make以及 </span></p>
<p>(mingw32-make -Wl,-static)</p>
<p>接著回到 solvespace 原始碼目錄, 建立 build 目錄後進入 build 目錄</p>
<p>執行<span>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release</span><br/><span>以及mingw32-make</span></p>
<p><span></span></p>
<p></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/wUh5GHPvndo" width="560"></iframe></span></p>
<p>week5</p>
<p>solvespace練習 .</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/WWwaNAp3v_M" width="560"></iframe></p>
<h2>WEEK6~WEEK9</h2>
<p>week6</p>
<p><span>利用Solvespace畫出車子</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/YCeOuFLPeAk" width="560"></iframe></span><span><br/></span></p>
<p><span>利用vrep3遠端控制模型車的移動</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/iiUXrjx6nwM" width="560"></iframe></span></p>
<p>week7</p>
<p>將solvespace about裡改成自己學號</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/TCFPOrQyZ2s" width="560"></iframe></p>
<p>繪圖認證</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/4jRp5FPwpTg" width="560"></iframe></p>
<p></p>
<p>week8</p>
<p>1.打開LEO並且把pelican.leo拖進去</p>
<p>2.到<span>pelican設定的@edit貼上自己的biog網址</span></p>
<p><span>3.對local-blog按右鍵Goto Script 複製裡面指令</span></p>
<p><span>4.到自己資料夾內輸入這段指令</span></p>
<p><span>5.到近端確認是否完成</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/lZFVf6vYBfg" width="560"></iframe></span></p>
<p>1.首先先把start複製下來</p>
<p>2.到2019/data/webots貼上剛剛複製的start</p>
<p>3.把剛剛複製的改名並且拖到編輯器裡面</p>
<p>4.增加set path_webots=%Disk%:\Webots_2019b_rev1\msys64\mingw64\bin;%Disk%:\Webots_2019b_rev1\msys64\usr\bin</p>
<p>5.並在path=%..這段後面新增%path_webots%</p>
<p>6.在下面再新增一段start Y:\Webots_2019b_rev1\msys64\mingw64\bin\webots.exe</p>
<p>7.啟動</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/-pXrKDauKmw" width="560"></iframe></p>
<h2>week10~week14</h2>
<p>第五章</p>
<p>NX 12 Drafting應用程序使您可以創建工程圖，視圖，幾何形狀，尺寸和起草製造所需的註釋以及對工業設計的理解。本章的目的是為設計人員/製圖員提供有關起草工具的足夠知識，以便創建其設計的基本圖紙。製圖應用程序支持工程製圖符合ANSI標準的模型。在解釋了起草申請的基礎之後，我們將逐步介紹起草一些先前創建的模型的方法。</p>
<p>5-1總覽</p>
<p>製圖應用程序旨在允許您制定和維護行業標準直接從3D模型或裝配零件製造工程圖。Drafting應用程序提供了一組2D繪圖，滿足2D中心設計和佈局要求的工具。可以製作獨立的2D工程圖。繪圖應用程序基於如下圖所示的實體模型創建視圖。通過繪圖，可以輕鬆地創建具有正交視圖，剖面圖，導入視圖，輔助視圖，尺寸和其他註釋。</p>
<p><img alt="" height="191" src="https://s40723219.github.io/cad2019/images/1.PNG" width="284"/></p>
<p>5.2建立草圖</p>
<p>打開文件Arborpress_rack.prt<br/>從NX 12界面中，選擇File→Draft如圖所示或選擇Application選項然後選擇製圖</p>
<p>可選擇圖紙的大小，以及投影第一角法或第三角法<img alt="" height="340" src="https://s40723219.github.io/cad2019/images/2.PNG" width="440"/><img alt="" height="249" src="https://s40723219.github.io/cad2019/images/3.png" width="70"/></p>
<p>5.3尺寸</p>
<p>現在，我們繼續為這些視圖創建尺寸。<br/>尺寸標註如下所述的兩種方式之一：<br/>選擇菜單→插入→尺寸<br/>不然就是<br/>單擊尺寸工具欄，如下圖所示</p>
<p><img alt="" height="140" src="https://s40723219.github.io/cad2019/images/10.png" width="485"/></p>
<p><span>單擊“點和邊”，移動鼠標，然後單擊適當的位置進行繪製</span></p>
<p><span>5.4剖面圖</span></p>
<p><span>為同一零件創建一個剖面圖，以顯示孔的深度和輪廓。</span></p>
<p><span>選擇插入→視圖→截面或從視圖組中單擊視圖截面圖標<br/>在功能區欄中<br/>單擊基本視圖底部，如圖所示。這將顯示幻影<br/>帶有兩個箭頭標記的線表示剖面平面的方向（橙色虛線<br/>向上箭頭）。</span></p>
<p><span><img alt="" height="127" src="https://s40723219.github.io/cad2019/images/16.png" width="532"/><br/>單擊視圖的中間，如圖所示。這將確定剖麵線的位置<br/>（剖面圖）<br/>現在，在視圖周圍移動光標以獲取剖面平面的方向。保持箭頭<br/>垂直向上指點並將截面圖拖動到基本視圖的底部</span></p>
<p><span><img alt="" height="208" src="https://s40723219.github.io/cad2019/images/17.png" width="493"/></span></p>
<p><span>5.5產品和製造信息</span></p>
<p><span>產品和製造信息（PMI）是NX中的重要應用之一，提供用於在3D環境中記錄產品的註釋工具。 PMI申請包括一個全面的3D註釋環境，允許設計團隊共享細節例如幾何尺寸和公差（GD＆T），表面光潔度，焊接信息，材料規格、評論、政府安全訊息或專有訊息，等直接添加到3D模型中。 PMI符合行業標準的3D產品定義，從事協作項目的產品團隊將使用3D模型作為合法的完整記錄產品和製造信息的方法。</span></p>
<p><span>5.6例子</span></p>
<p><span>打開模型Impeller_hexa-bolt.prt<br/>選擇文件→起草或在應用程序選項卡中選擇起草<br/>在圖紙窗口中，選擇圖紙E-34 X 44並將比例值更改為8.0：1.0<br/>點擊確定<br/>選擇插入→視圖→基本視圖或單擊基本視圖圖標<br/>通過重複添加前視圖<br/>最後一個示例中說明的過程<br/>添加包括右視圖在內的正交視圖<br/>視圖和頂視圖<br/>選擇首選項→起草<br/>取消選中顯示邊框下的框<br/>查看標籤<br/>屏幕將具有以下三個視圖。</span></p>
<p><span><br/>為了可視化隱藏線，<br/>選擇首選項→草圖→查看，或者</span><span><br/>選擇視圖，單擊鼠標右鍵，然後選擇“設置”，如下所示<br/>將彈出一個窗口，其中包含與視圖有關的各種選項。<br/>單擊隱藏線選項卡<br/>如下所示，將“進程隱藏線”更改為“虛線”，然後單擊“確定”。</span></p>
<p><span><img alt="" height="187" src="https://s40723219.github.io/cad2019/images/24.png" width="364"/></span></p>
<p><span>您可以看到隱藏線，如右圖所示<br/><br/>現在，我們將繼續進行尺寸標註。<br/>選擇插入→尺寸→線性或<br/>點擊“線性尺寸”圖標<br/>尺寸組<br/>給出所有距離的垂直尺寸<br/>如下圖所示</span></p>
<p><span><img alt="" height="157" src="https://s40723219.github.io/cad2019/images/26.png" width="204"/></span></p>
<p><span>對於線程，我們將使用引導線。<br/>單擊工具欄中顯示的註釋圖標<br/>在打開的註釋窗口中，輸入以下內容<br/>文本。您可以在上找到O和度數符號<br/>符號選項卡<br/>右螺紋直徑0.20 x 1.5<br/>節距0.05，角度60度<br/>單擊側視圖中的螺紋軸，</span><span>按住鼠標並將“引線”行拖動到視圖。放開鼠標，然後再次單擊以放置文本</span></p>
<p></p>
<p><span><img alt="" height="333" src="https://s40723219.github.io/cad2019/images/31.png" width="353"/></span></p>
<p><span>關閉註釋編輯器<br/>由於刻字的高度很小，因此我們將放大字符大小以及箭頭尺寸。<br/>右鍵單擊Lead並選擇Settings<br/>單擊刻字選項<br/>在參數部分，增加高度以使引線清晰<br/>單擊“行/箭頭”選項<br/>在格式部分，增加引線的長度<br/>現在，我們將添加其他尺寸和視圖。<br/>選擇插入→尺寸→徑向或在尺寸組<br/>在上視圖中單擊螺栓的圓以給出直徑尺寸<br/>單擊插入→視圖→基本視圖，然後單擊基本視圖圖標<br/>選擇等軸測視圖並將其放置在屏幕上的某個位置<br/>最終圖如下所示。記得保存。<br/></span></p>
<p><span><img alt="" height="419" src="https://s40723219.github.io/cad2019/images/29.png" width="461"/></span></p>
<p><span></span></p>
<p><span>week10</span></p>
<p><span>組長建立好整組要用的倉儲後，組員要到倉儲下去fork這樣才可以讓每個人都可以push,利用指令<span>git clone --recurse-submodules將組倉儲clone進隨身碟中，而每次要push之前都要先git pull 以確保資料的錯誤，在push之後組員也必須按pull new request才能請組長確保push成功</span></span></p>
<p><span><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/H0xmkLuIYeU" width="560"></iframe></span></span></p>
<p><span><span>week12</span></span></p>
<p><span>webot tutorial - 1</span></p>
<p>1.先創建儲存檔案的資料夾</p>
<p>2.創建一個新生成的世界</p>
<p>3.創建好之後先用加號加入一個木箱並更改其尺寸</p>
<p>4.添加完成了之後我們要複製並貼上木箱直到場面上有三個木箱</p>
<p>5.添加e-puck robot並且啟動試試看是否可以運動</p>
<p>6.增加控制器操縱e-puck robot添加指令後機器人應該會直走並旋轉後停下</p>
<p>7.修改這個控制器的功能貼上另一個指令如果成功機器人因該會緩慢行走</p>
<p>8.修改機器人馬達的動力使其達到原地旋轉</p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ZT9IxOKT2iI" width="560"></iframe></p>
<p>week12</p>
<p>個人進度</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/D3rjCuZisF4" width="560"></iframe></p>
<h2>week15 </h2>
<p>進度回報</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/_MMMvJpFg5Y" width="560"></iframe></p>
<h2>WEEK16</h2>
<p>16周小考</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/p_q02QBF-DU" width="560"></iframe></p>
<p></p>
<h2>WEEK17個人任務</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/_dQdgv7oQHM" width="560"></iframe></p>